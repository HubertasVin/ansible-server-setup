---
- name: Initial setup for Fedora 41 with Docker, BorgBackup and daily cron sync
  hosts: localhost
  become: yes
  connection: local
  collections:
    - community.docker
  vars:
    home_dir: "/home/hubserv"
    dav_dir: "{{ home_dir }}/dav_data"
    docker_image: "dgraziotin/nginx-webdav-nononsense"
    hubserv_username: "hubserv"
    hubserv_password: "W4QOjUQe"
    uid: "1000"
    gid: "1000"
    sync_script_path: "{{ home_dir }}/sync-data.sh"
    sync_log_path: "{{ home_dir }}/sync-data.log"
    borg_user: borguser
    borg_backup_dir: "/home/{{ borg_user }}/backups"
    borg_repo_password: "a2VE6TzNyxw5cTvu"
    borg_repo_path: "{{ borg_backup_dir }}"
    borg_password: "{{ borg_repo_password }}"

  tasks:
  - name: Install required package for encryption
    dnf:
      name: python3-passlib
      state: present
    when: ansible_os_family == "RedHat"

  - name: Create webdav user
    user:
      name: "{{ hubserv_username }}"
      state: present
      home: "{{ home_dir }}"
      shell: /bin/bash

  - name: Set password for webdav user
    user:
      name: "{{ hubserv_username }}"
      password: "{{ hubserv_password | password_hash('sha512') }}"
      update_password: always

  - name: Create BorgBackup user
    user:
      name: "{{ borg_user }}"
      state: present
      home: "/home/{{ borg_user }}"
      shell: "/bin/bash"

  - name: Set password for borguser
    user:
      name: "{{ borg_user }}"
      password: "{{ borg_password | password_hash('sha512') }}"
      update_password: always

  - block:
    - name: Ensure dnf cache is updated
      dnf:
        update_cache: yes
      become: yes
      become_user: root
      when: ansible_os_family == "RedHat"

    - name: Install required packages for Fedora
      dnf:
        name:
          - ca-certificates
          - curl
          - gnupg2
          - redhat-lsb-core
          - acl
          - python3-passlib
        state: present
      become: yes
      become_user: root
      when: ansible_os_family == "RedHat"

    - name: Add Docker's official repository for Fedora
      yum_repository:
        name: docker-ce-stable
        description: "Docker CE Stable - $releasever"
        baseurl: "https://download.docker.com/linux/fedora/$releasever/$basearch/stable"
        enabled: yes
        gpgcheck: yes
        gpgkey: "https://download.docker.com/linux/fedora/gpg"
        state: present
      become: yes
      become_user: root
      when: ansible_os_family == "RedHat"

    - name: Install Docker
      dnf:
        name: docker-ce
        state: present
        update_cache: yes
      become: yes
      become_user: root
      when: ansible_os_family == "RedHat"

    - name: Ensure Docker service is enabled and started
      service:
        name: docker
        state: started
        enabled: yes
      become: yes
      become_user: root
      become_method: sudo

    - name: Create dav_data directory in home directory
      file:
        path: "{{ dav_dir }}"
        state: directory
        owner: "{{ uid }}"
        group: "{{ gid }}"
        mode: '0755'

    - name: Run and ensure the docker container starts at boot
      docker_container:
        name: webdav
        image: "{{ docker_image }}"
        published_ports:
          - "0.0.0.0:8080:80"
        volumes:
          - "{{ dav_dir }}:/data:Z"
        env:
          WEBDAV_USERNAME: "{{ hubserv_username }}"
          WEBDAV_PASSWORD: "{{ hubserv_password }}"
          PUID: "{{ uid }}"
          PGID: "{{ gid }}"
        restart_policy: always
        state: started
        detach: yes
      become: yes
      become_user: root

    - name: Add cron job for daily sync
      cron:
        name: "Daily dav sync"
        minute: "0"
        hour: "2"
        job: "/bin/bash {{ sync_script_path }} >> {{ sync_log_path }} 2>&1"

    - name: Install BorgBackup (RedHat-based)
      dnf:
        name: borgbackup
        state: present
      when: ansible_os_family == "RedHat"
      become: yes
      become_user: root

    - name: Create backup directory
      file:
        path: "{{ borg_backup_dir }}"
        state: directory
        owner: "{{ borg_user }}"
        group: "{{ borg_user }}"
        mode: '0755'
      become: yes
      become_user: root

    - name: Initialize Borg repository
      ansible.builtin.shell: |
        export BORG_PASSPHRASE={{ borg_repo_password }}
        borg init --encryption=repokey {{ borg_repo_path }}
      args:
        creates: "{{ borg_repo_path }}/config"
      become: yes
      become_user: "{{ borg_user }}"

    - name: Set proper permissions for Borg directory
      file:
        path: "{{ borg_backup_dir }}"
        recurse: yes
        owner: "{{ borg_user }}"
        group: "{{ borg_user }}"
        mode: '0755'
      become: yes
      become_user: root

    become: yes
    become_user: "{{ hubserv_username }}"
