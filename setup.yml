---
- name: Initial setup for Fedora 41 with Docker, BorgBackup and daily cron sync
  hosts: localhost
  become: yes
  connection: local
  vars_files:
    - secrets.yml
  collections:
    - community.docker
  vars:
    docker_image: "dgraziotin/nginx-webdav-nononsense"
    server_main_user: "hubserv"
    home_dir: "/home/{{ server_main_user }}"
    dav_dir: "{{ home_dir }}/dav_data"
    uid: "1000"
    gid: "1000"
    sync_script_path: "{{ home_dir }}/sync-data.sh"
    sync_log_path: "{{ home_dir }}/sync-data.log"
    borg_user: borguser
    borg_password: "{{ borg_repo_password }}"
    borg_backup_dir: "/home/{{ borg_user }}/backups"
    borg_repo_path: "{{ borg_backup_dir }}"

  tasks:
  #INFO: Install and setup apps
  - name: Add Docker's official repository for Fedora
    yum_repository:
      name: docker-ce-stable
      description: "Docker CE Stable - $releasever"
      baseurl: "https://download.docker.com/linux/fedora/$releasever/$basearch/stable"
      enabled: yes
      gpgcheck: yes
      gpgkey: "https://download.docker.com/linux/fedora/gpg"
      state: present
    when: ansible_os_family == "RedHat"

  - name: Install required packages for Fedora
    dnf:
      name:
        - ca-certificates
        - curl
        - gnupg2
        - redhat-lsb-core
        - acl
        - python3-passlib
        - docker-ce
        - borgbackup
      state: present
      update_cache: yes
    when: ansible_os_family == "RedHat"

  - name: Ensure dnf cache is updated
    dnf:
      update_cache: yes
    when: ansible_os_family == "RedHat"

  - name: Ensure Docker service is enabled and started
    service:
      name: docker
      state: started
      enabled: yes

  #INFO: Create users
  - name: Create webdav user
    user:
      name: "{{ server_main_user }}"
      state: present
      home: "{{ home_dir }}"
      shell: /bin/bash

  - name: Set password for webdav user
    user:
      name: "{{ server_main_user }}"
      password: "{{ server_main_password | password_hash('sha512') }}"
      update_password: always

  - name: Allow webdav user to run all commands with sudo without a password
    copy:
      dest: "/etc/sudoers.d/{{ server_main_user }}"
      content: "{{ server_main_user }} ALL=(ALL) NOPASSWD:ALL"
      owner: root
      group: root
      mode: '0440'
    become: yes

  - name: Create BorgBackup user
    user:
      name: "{{ borg_user }}"
      state: present
      home: "/home/{{ borg_user }}"
      shell: "/bin/bash"

  - name: Set password for borguser
    user:
      name: "{{ borg_user }}"
      password: "{{ borg_password | password_hash('sha512') }}"
      update_password: always

  - block:
    - name: Create dav_data directory in home directory
      file:
        path: "{{ dav_dir }}"
        state: directory
        owner: "{{ uid }}"
        group: "{{ gid }}"
        mode: '0755'

    - name: Run and ensure the docker container starts at boot
      docker_container:
        name: webdav
        image: "{{ docker_image }}"
        published_ports:
          - "0.0.0.0:8080:80"
        volumes:
          - "{{ dav_dir }}:/data:Z"
        env:
          WEBDAV_USERNAME: "{{ server_main_user }}"
          WEBDAV_PASSWORD: "{{ server_main_password }}"
          PUID: "{{ uid }}"
          PGID: "{{ gid }}"
        restart_policy: always
        state: started
        detach: yes
      become: yes
      become_user: root

    - name: Add cron job for daily sync
      cron:
        name: "Daily dav sync"
        minute: "0"
        hour: "2"
        job: "/bin/bash {{ sync_script_path }} >> {{ sync_log_path }} 2>&1"

    - name: Replace placeholder with actual webdav_username in sync_data.sh
      replace:
        path: "{{ home_dir }}/sync_data.sh"
        regexp: 'insert-user-name-here'
        replace: "{{ server_main_user }}"
      become: yes
      become_user: "{{ server_main_user }}"

    - name: Create backup directory
      file:
        path: "{{ borg_backup_dir }}"
        state: directory
        owner: "{{ borg_user }}"
        group: "{{ borg_user }}"
        mode: '0755'
      become: yes
      become_user: root

    - name: Initialize Borg repository
      ansible.builtin.shell: |
        export BORG_PASSPHRASE={{ borg_repo_password }}
        borg init --encryption=repokey {{ borg_repo_path }}
      args:
        creates: "{{ borg_repo_path }}/config"
      become: yes
      become_user: "{{ borg_user }}"

    - name: Set proper permissions for Borg directory
      file:
        path: "{{ borg_backup_dir }}"
        recurse: yes
        owner: "{{ borg_user }}"
        group: "{{ borg_user }}"
        mode: '0755'
      become: yes
      become_user: root

    become: yes
    become_user: "{{ server_main_user }}"
